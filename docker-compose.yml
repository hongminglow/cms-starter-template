name: cms

services:
  postgres:
    image: postgres:16.3
    container_name: postgres
    environment:
      POSTGRES_USER: cms
      POSTGRES_PASSWORD: cms
      POSTGRES_DB: cms_starter
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cms -d cms_starter"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: backend
    build:
      context: backend/
    environment:
      NODE_ENV: production
      APP_PORT: 3000
      DATABASE_URL: postgresql://cms:cms@postgres:5432/cms_starter
      JWT_SECRET: change-me
      JWT_EXPIRES_IN: 1h
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    command: >
      sh -c "npx prisma migrate deploy && npx prisma db seed && node dist/main.js"

  frontend:
    container_name: frontend
    build:
      context: frontend/
    depends_on:
      backend:
        condition: service_started
    ports:
      - "5173:80"

volumes:
  pg_data:
  redis_data:
